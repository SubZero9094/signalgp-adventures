#!/bin/bash -login

### Configure job:
#PBS -l walltime=06:00:00:00
#PBS -l feature=intel16
#PBS -l mem=8gb
#PBS -t 601-900
#PBS -N GECCO_ES8

### load necessary modules, e.g.
module load powertools
module load GNU/5.2

# BASE PARAMETERS
# Experiment parameters
PARAM__ENVIRONMENT_STATES=8
PARAM__ENVIRONMENT_CHG_PROB=0.125
PARAM__PROBLEM=1

PARAM__GENERATIONS=100000

PARAM__HW_MIN_BIND_THRESH=0.50
PARAM__HW_MAX_CORES=32
PARAM__PROG_MAX_FUNC_CNT=32
PARAM__PROG_MAX_FUNC_LEN=64

PARAM__SYSTEMATICS_INTERVAL=100
PARAM__FITNESS_INTERVAL=100
PARAM__POP_SNAPSHOT_INTERVAL=50000

PARAM__PER_BIT__TAG_BFLIP_RATE=0.005
PARAM__PER_INST__SUB_RATE=0.005
PARAM__PER_INST__INS_RATE=0.005
PARAM__PER_INST__DEL_RATE=0.005
PARAM__PER_FUNC__SLIP_RATE=0.05
PARAM__PER_FUNC__FUNC_DUP_RATE=0.05
PARAM__PER_FUNC__FUNC_DEL_RATE=0.05

# Event-driven
if [ ${PBS_ARRAYID} -ge 601 ] && [ ${PBS_ARRAYID} -le 700 ]
then
  PARAM__ENV_SIGNALS=1
  PARAM__ACTIVE_SENSING=0

# Imperative
elif [ ${PBS_ARRAYID} -ge 701 ] && [ ${PBS_ARRAYID} -le 800 ]
then
  PARAM__ENV_SIGNALS=0
  PARAM__ACTIVE_SENSING=1

# Combined
elif [ ${PBS_ARRAYID} -ge 801 ] && [ ${PBS_ARRAYID} -le 900 ]
then
  PARAM__ENV_SIGNALS=1
  PARAM__ACTIVE_SENSING=1
fi

# Logistics details.
EXP_SET=gecco2018_changing_environment
BENCHMARK=logic_operations
EXEC=logic_operations
RUN_NAME=ES${PARAM__ENVIRONMENT_STATES}_ED${PARAM__ENV_SIGNALS}_AS${PARAM__ACTIVE_SENSING}
RUN_DIR=/mnt/scratch/lalejini/data/signal-gp-benchmarking/${EXP_SET}/${RUN_NAME}__${PBS_ARRAYID}

### change to the working directory where your code is located
cd /mnt/home/lalejini/devo_ws/signal-gp-benchmarking/${BENCHMARK}
mkdir -p ${RUN_DIR}
cp ./ancestor.gp ${RUN_DIR}
cp ./GECCORESUB_configs.cfg ${RUN_DIR}/configs.cfg
cp ./${EXEC} ${RUN_DIR}
cd ${RUN_DIR}
./${EXEC} -RANDOM_SEED ${PBS_ARRAYID} -ENVIRONMENT_STATES ${PARAM__ENVIRONMENT_STATES} -ENVIRONMENT_CHG_PROB ${PARAM__ENVIRONMENT_CHG_PROB} -PROBLEM ${PARAM__PROBLEM} -GENERATIONS ${PARAM__GENERATIONS} -HW_MIN_BIND_THRESH ${PARAM__HW_MIN_BIND_THRESH} -HW_MAX_CORES ${PARAM__HW_MAX_CORES} -PROG_MAX_FUNC_CNT ${PARAM__PROG_MAX_FUNC_CNT} -PROG_MAX_FUNC_LEN ${PARAM__PROG_MAX_FUNC_LEN} -SYSTEMATICS_INTERVAL ${PARAM__SYSTEMATICS_INTERVAL} -FITNESS_INTERVAL ${PARAM__FITNESS_INTERVAL} -POP_SNAPSHOT_INTERVAL ${PARAM__POP_SNAPSHOT_INTERVAL} -PER_BIT__TAG_BFLIP_RATE ${PARAM__PER_BIT__TAG_BFLIP_RATE} -PER_INST__SUB_RATE ${PARAM__PER_INST__SUB_RATE} -PER_INST__INS_RATE ${PARAM__PER_INST__INS_RATE} -PER_INST__DEL_RATE ${PARAM__PER_INST__DEL_RATE} -PER_FUNC__SLIP_RATE ${PARAM__PER_FUNC__SLIP_RATE} -PER_FUNC__FUNC_DUP_RATE ${PARAM__PER_FUNC__FUNC_DUP_RATE} -PER_FUNC__FUNC_DEL_RATE ${PARAM__PER_FUNC__FUNC_DEL_RATE} -ENV_SIGNALS ${PARAM__ENV_SIGNALS} -ACTIVE_SENSING ${PARAM__ACTIVE_SENSING} > run.log
