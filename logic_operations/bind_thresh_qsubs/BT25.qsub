#!/bin/bash -login

### Configure job:
#PBS -l walltime=01:00:00:00
#PBS -l feature=intel16
#PBS -l mem=8gb
#PBS -t 481-960
#PBS -N BT25

### load necessary modules, e.g.
module load powertools
module load GNU/5.2

# BASE PARAMETERS
# Experiment parameters
PARAM__HW_MIN_BIND_THRESH=0.25
PARAM__PROBLEM=1
PARAM__ENV_SIGNALS=1
PARAM__ACTIVE_SENSING=0
PARAM__POP_SNAPSHOT_INTERVAL=10000
PARAM__PER_BIT__TAG_BFLIP_RATE=0.005
PARAM__PER_INST__SUB_RATE=0.005
PARAM__PER_INST__INS_RATE=0.005
PARAM__PER_INST__DEL_RATE=0.005
PARAM__PER_FUNC__SLIP_RATE=0.05
PARAM__PER_FUNC__FUNC_DUP_RATE=0.05
PARAM__PER_FUNC__FUNC_DEL_RATE=0.05

# CONDITIONS:
# 1:    481-510   => ES2  FS0  RNDSIG0
if [ ${PBS_ARRAYID} -ge 481 ] && [ ${PBS_ARRAYID} -le 510 ]
then
  PARAM__ENVIRONMENT_STATES=2
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=0

# 2:   511-540   => ES2  FS0  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 511 ] && [ ${PBS_ARRAYID} -le 540 ]
then
  PARAM__ENVIRONMENT_STATES=2
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=1

# 3:   541-570   => ES2  FS2  RNDSIG0
elif [ ${PBS_ARRAYID} -ge 541 ] && [ ${PBS_ARRAYID} -le 570 ]
then
  PARAM__ENVIRONMENT_STATES=2
  PARAM__ENVIRONMENT_FALSE_SIGNALS=2
  PARAM__RND_ENV_STATE_TAGS=0

# 4:   571-600  => ES2  FS2  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 571 ] && [ ${PBS_ARRAYID} -le 600 ]
then
  PARAM__ENVIRONMENT_STATES=2
  PARAM__ENVIRONMENT_FALSE_SIGNALS=2
  PARAM__RND_ENV_STATE_TAGS=1

# 5:  601-630  => ES4  FS0  RNDSIG0
elif [ ${PBS_ARRAYID} -ge 601 ] && [ ${PBS_ARRAYID} -le 630 ]
then
  PARAM__ENVIRONMENT_STATES=4
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=0

# 6:  631-660  => ES4  FS0  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 631 ] && [ ${PBS_ARRAYID} -le 660 ]
then
  PARAM__ENVIRONMENT_STATES=4
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=1

# 7:  661-690  => ES4  FS4  RNDSIG0
elif [ ${PBS_ARRAYID} -ge 661 ] && [ ${PBS_ARRAYID} -le 690 ]
then
  PARAM__ENVIRONMENT_STATES=4
  PARAM__ENVIRONMENT_FALSE_SIGNALS=4
  PARAM__RND_ENV_STATE_TAGS=0

# 8:  691-720  => ES4  FS4  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 691 ] && [ ${PBS_ARRAYID} -le 720 ]
then
  PARAM__ENVIRONMENT_STATES=4
  PARAM__ENVIRONMENT_FALSE_SIGNALS=4
  PARAM__RND_ENV_STATE_TAGS=1

# 9:  721-750  => ES8  FS0  RNDSIG0
elif [ ${PBS_ARRAYID} -ge 721 ] && [ ${PBS_ARRAYID} -le 750 ]
then
  PARAM__ENVIRONMENT_STATES=8
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=0

# 10: 751-780  => ES8  FS0  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 751 ] && [ ${PBS_ARRAYID} -le 780 ]
then
  PARAM__ENVIRONMENT_STATES=8
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=1

# 11: 781-810  => ES8  FS8  RNDSIG0
elif [ ${PBS_ARRAYID} -ge 781 ] && [ ${PBS_ARRAYID} -le 810 ]
then
  PARAM__ENVIRONMENT_STATES=8
  PARAM__ENVIRONMENT_FALSE_SIGNALS=8
  PARAM__RND_ENV_STATE_TAGS=0

# 12: 811-840  => ES8  FS8  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 811 ] && [ ${PBS_ARRAYID} -le 840 ]
then
  PARAM__ENVIRONMENT_STATES=8
  PARAM__ENVIRONMENT_FALSE_SIGNALS=8
  PARAM__RND_ENV_STATE_TAGS=1

# 13: 841-870  => ES16 FS0  RNDSIG0
elif [ ${PBS_ARRAYID} -ge 841 ] && [ ${PBS_ARRAYID} -le 870 ]
then
  PARAM__ENVIRONMENT_STATES=16
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=0

# 14: 871-900  => ES16 FS0  RNDSIG1
elif [ ${PBS_ARRAYID} -ge 871 ] && [ ${PBS_ARRAYID} -le 900 ]
then
  PARAM__ENVIRONMENT_STATES=16
  PARAM__ENVIRONMENT_FALSE_SIGNALS=0
  PARAM__RND_ENV_STATE_TAGS=1

# 15: 901-930  => ES16 FS16 RNDSIG0
elif [ ${PBS_ARRAYID} -ge 901 ] && [ ${PBS_ARRAYID} -le 930 ]
then
  PARAM__ENVIRONMENT_STATES=16
  PARAM__ENVIRONMENT_FALSE_SIGNALS=16
  PARAM__RND_ENV_STATE_TAGS=0

# 16: 931-960  => ES16 FS16 RNDSIG1
elif [ ${PBS_ARRAYID} -ge 931 ] && [ ${PBS_ARRAYID} -le 960 ]
then
  PARAM__ENVIRONMENT_STATES=16
  PARAM__ENVIRONMENT_FALSE_SIGNALS=16
  PARAM__RND_ENV_STATE_TAGS=1
fi

# Logistics details.
EXP_SET=binding_thresholds
BENCHMARK=logic_operations
EXEC=logic_operations
RUN_NAME=BT${PARAM__HW_MIN_BIND_THRESH}_ES${PARAM__ENVIRONMENT_STATES}_FS${PARAM__ENVIRONMENT_FALSE_SIGNALS}_RNDSIG${PARAM__RND_ENV_STATE_TAGS}
RUN_DIR=/mnt/scratch/lalejini/data/signal-gp-benchmarking/${EXP_SET}/${RUN_NAME}__${PBS_ARRAYID}

### change to the working directory where your code is located
cd /mnt/home/lalejini/devo_ws/signal-gp-benchmarking/${BENCHMARK}
mkdir -p ${RUN_DIR}
cp ./ancestor.gp ${RUN_DIR}
cp ./bt_configs.cfg ${RUN_DIR}/configs.cfg
cp ./${EXEC} ${RUN_DIR}
cd ${RUN_DIR}
./${EXEC} -RANDOM_SEED ${PBS_ARRAYID} -HW_MIN_BIND_THRESH ${PARAM__HW_MIN_BIND_THRESH} -PROBLEM ${PARAM__PROBLEM} -ENV_SIGNALS ${PARAM__ENV_SIGNALS} -ACTIVE_SENSING ${PARAM__ACTIVE_SENSING} -POP_SNAPSHOT_INTERVAL ${PARAM__POP_SNAPSHOT_INTERVAL} -PER_BIT__TAG_BFLIP_RATE ${PARAM__PER_BIT__TAG_BFLIP_RATE} -PER_INST__SUB_RATE ${PARAM__PER_INST__SUB_RATE} -PER_INST__INS_RATE ${PARAM__PER_INST__INS_RATE} -PER_INST__DEL_RATE ${PARAM__PER_INST__DEL_RATE} -PER_FUNC__SLIP_RATE ${PARAM__PER_FUNC__SLIP_RATE} -PER_FUNC__FUNC_DUP_RATE ${PARAM__PER_FUNC__FUNC_DUP_RATE} -PER_FUNC__FUNC_DEL_RATE ${PARAM__PER_FUNC__FUNC_DEL_RATE} -ENVIRONMENT_STATES ${PARAM__ENVIRONMENT_STATES} -ENVIRONMENT_FALSE_SIGNALS ${PARAM__ENVIRONMENT_FALSE_SIGNALS} -RND_ENV_STATE_TAGS ${PARAM__RND_ENV_STATE_TAGS} > run.log
